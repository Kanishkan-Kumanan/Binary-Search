#code to find the starting and ending position of a number in a given list of nums, which is sorted in increasing order.

def binary_search(lo,hi,condition):
    
    while lo <= hi:
        mid = (lo + hi) // 2
        result = condition(mid)
        
        if result == 'found':
            return mid
        elif result == 'left':
            hi = mid-1
        elif result == 'right':
            lo = mid + 1
            
    return -1    
        

def first_location(nums,target):
    def condition(mid):
        if nums[mid] == target:
            if mid > 0 and nums[mid-1] == target:
                return 'left'
            return 'found'
        
        elif nums[mid] > target:
            return 'left'
        else:
            return 'right'
    return binary_search(0,len(nums)-1,condition)

def last_location(nums,target):
    def condition(mid):
        if nums[mid] == target:
            if mid < len(nums)-1 and nums[mid+1] == target:
                return 'right'
            return 'found'
        elif nums[mid] < target:
            return 'right'
        else:
            return 'left'
    return binary_search(0,len(nums)-1,condition)        


def first_and_last_location(nums,target):
    return first_location(nums,target), last_location(nums,target)
    
nums = [1,2,4,4,4,4,4,4,5,6,9,10,11,14] 
target = 4
k = first_and_last_location(nums,target)
